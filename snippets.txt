
//void drawTopBar(CURRENT_STATE *state)
//{
//  POINT top_left, bottom_left, bottom_right;
//  
//  char buffer[] = "1:23:45";
//  
//  top_left.x = 0;
//  top_left.y = 0;
//
//  bottom_left.x = top_left.x;
//  bottom_left.y = top_left.y + uView.getFontHeight();
//
//  bottom_right.x = bottom_left.x + SCREEN_WIDTH;
//  bottom_right.y = bottom_left.y;
//
//  uView.line(bottom_left.x, bottom_left.y + 1, bottom_right.x, bottom_left.y + 1);
//
//  uView.setCursor(bottom_left.x, bottom_left.y - uView.getFontHeight());
//
//  formatTime(&state->run_time, buffer);
//
//  /* Draw the time */
//  uView.print(buffer);
//
//  /* If the pump is on, show the symbol. Otherwise show the shot counter */
//  if(state->pump)
//  {
//    /* Let the icon blink when waiting for the brew counter delay  */
//    if((state->brew_counter_delay > 0 && state->blink_counter < 2)
//        || state->brew_counter_delay == 0)
//    {
//      drawIcon(&icons[SCREEN_BREW], SCREEN_WIDTH - 8, 0);
//    }
//  }
//  else
//  {
//    /* Draw the shot counter */
//    if(state->shot_count > 0)
//    {
//      sprintf(buffer, "%02d", state->shot_count);
//      uView.setCursor(SCREEN_WIDTH - uView.getFontWidth() * 2 - 1, bottom_left.y - uView.getFontHeight());
//      uView.print(buffer);
//    }
//  }
//}
//
//void drawBottomBar(uint16_t from, uint16_t to, double percentage)
//{
//  POINT top_left, top_right, from_left, from_right, to_left, to_right;
//  char buffer[5];
//
//  top_left.x = 0;
//  top_left.y = SCREEN_HEIGHT - uView.getFontHeight() - 1;
//
//  top_right.x = top_left.x + SCREEN_WIDTH;
//  top_right.y = top_left.y;
//
//  uView.line(top_left.x, top_left.y - 1, top_right.x, top_left.y - 1);
//
//  sprintf(buffer, "%d", from);
//
//  from_left.x = 0;
//  from_left.y = top_left.y + 2;
//  from_right.x = (uView.getFontWidth() + 1) * getInt16PrintLen(from);
//  from_right.y = from_left.y;
//
//  /* Draw the "from" value */
//  uView.setCursor(from_left.x, from_left.y);
//  uView.print(buffer);
//
//  sprintf(buffer, "%d", to);
//
//  to_left.x = SCREEN_WIDTH - (uView.getFontWidth() + 1) * getInt16PrintLen(to) + 1;
//  to_left.y = from_left.y;
//  to_right.x = SCREEN_WIDTH;
//  to_right.y = from_left.y;
//
//  uView.setCursor(to_left.x, to_left.y);
//  uView.print(buffer);
//
//  int left = from_right.x + 1;
//  int width = to_left.x - from_right.x - 4;
//  int height = uView.getFontHeight() - 1;
//
//  if(percentage > 1)
//  {
//    percentage = 1;
//  }
//
//  if(percentage < 0)
//  {
//    percentage = 0;
//  }
//
//  /* Draw the range progress bar */
//  uView.rect(left, from_right.y, width + 1, height);
//  
//  uView.line(left + (int)(width * percentage), from_right.y, left + (int)(width * percentage), from_right.y + height);
//
//  /* Fill the rect's each second pixel */
//  for(uint16_t x = 0; x < (int)(width * percentage); x += 2)
//  {
//    for(int y = 0; y < height; y += 2)
//    {
//      uView.pixel(left + x, from_right.y + y);
//    }
//  }
//
//  /* Draw black pixels to make the rect's corners look round */
//  uView.setColor(BLACK);
//  uView.pixel(left, from_right.y);
//  uView.pixel(left + width, from_right.y);
//  uView.pixel(left, from_right.y + height - 1);
//  uView.pixel(left + width, from_right.y + height - 1);
//  uView.setColor(WHITE);
//}




//
///***
// * Draws the brew counter where the main icon should be
// */
//void drawBrewCounter(CURRENT_STATE *state)
//{
//  POINT origin;
//  char buff[3];
//  int old_font;
//  
//  origin.x = SCREEN_WIDTH / 4;
//  origin.y = SCREEN_HEIGHT / 2 + 2;
//
//  old_font = uView.getFontType();
//  uView.setFontType(1);
//
//  uView.setCursor(origin.x - uView.getFontWidth(), origin.y - uView.getFontHeight() / 2);
//  sprintf(buff, "%02d", state->brew_time.seconds);
//
//  /* Draw the brew counter with black color on white brackground */
//  uView.setColor(WHITE);
//  uView.rectFill(origin.x - uView.getFontWidth() - 3, origin.y - uView.getFontHeight() / 2 - 2, uView.getFontWidth() * 2 + 5, uView.getFontHeight());
//  uView.setColor(BLACK);
//  uView.print(buff);
//
//  /* Font fix: erasing two lines overlapping the background */
//  uView.lineH(origin.x - uView.getFontWidth() - 3, origin.y + uView.getFontHeight() / 2 - 2, uView.getFontWidth() * 2 + 5);
//  uView.lineH(origin.x - uView.getFontWidth() - 3, origin.y + uView.getFontHeight() / 2 - 1, uView.getFontWidth() * 2 + 5);
//  
//  uView.setColor(WHITE);
//
//  uView.setFontType(old_font);
//}
//
//void drawTrendArrow(byte rising, uint16_t y_origin)
//{
//  POINT pos;
//  uint16_t height = 5;
//  int y;
//  
//  pos.y += y_origin + (rising ? (-1 * (height) - 3) : (uView.getFontHeight()) + 3);
//  
//  for(y = 0; y < height; y++)
//  {
//    if(rising)
//    {
//      uView.line(SCREEN_WIDTH/4*3 - y, pos.y + y, SCREEN_WIDTH/4*3 + y, pos.y + y);
//    }
//    else
//    {
//      uView.line(SCREEN_WIDTH/4*3 - (height - y - 1), pos.y + y, SCREEN_WIDTH/4*3 + (height - y - 1), pos.y + y);
//    }
//  }
//}
